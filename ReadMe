M04-A03 Two Implemented Use Cases with Clean, Refactored Code

User specific persistence and foods containing moods added by Chandler.
This involved changing the way all of the model classes were structured, and how the controllers that deal with those classes
access them.  The AppData class now contains a UserList, which can be easily serialized.  Each user has their own FoodList, and
every food item in the foodList has a MoodList with the associated moods that have been entered with that food.  Therefore, if
a new food is added, first it will check if it is a duplicate, and if it is, it will add another mood to that foods moodlist.

-------------------------
Current Use Case: Add Moods
Users are able to login with username "TestUser0" and password "test". From there the user can navigate to
the Mood Menu tab where they will have the option to enter a new mood name into a text box which is saved to
the data repository. Saving function can be observed in the terminal output on entry and entry of subsequent moods.
	-Fixes to the Add Mood functionality in the wake of code cleanup have been added. Additionally the drop down menu allowing for mood selection on food entry was updated to display available mood options. -Mranth

Design Pattern Navigation tabbed Panel has Been added by Tim
Command design pattern also added with a reset command also added by Tim


The Singleton pattern has been applied to the AppData (a collection of the serialized data) class. 
A static, private, final AppData object (INSTANCE) is initialized as a member.  A public method, getInstance(),
is called whenever another class needs to access the serialized data - Jared
The Sort-By user interface pattern will be implemented with our View History use case, 
as our first use case does not involve tabular elements - Jared

The interpreter pattern will be implemented gradually as we start to classify the foods to make them into associations
with moods.  This is a part of a later use case and will be implemented as the associations are. - Chandler

The GUI designs that are associated with input, especially food, have begun to be implemented with the addition of
a dropbox to choose previously inputted foods.  As our design is fleshed out, this will be continued to be expanded
upon.  - Chandler
